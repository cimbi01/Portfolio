
@{
    @using MVC.Models.ViewModels;
    @using MVC.Services;
    @using Jobs.Data.WorkingPerson;
    @model HomeViewModel
    @inject UserHandlerService UserHandlerService
    string selectedUserNam = UserHandlerService.ActiveUser?.Contact.Name ?? "No selected User";
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="justify-content-center">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <h2 class="h2 text-center">Create Employee</h2>
            @using (Html.BeginForm(FormMethod.Post))
            {
                <div class="form-group">
                    @Html.LabelFor(Model => Model.CreatedEmployee.Contact.Name)
                    @Html.TextBoxFor(Model => Model.CreatedEmployee.Contact.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.CreatedEmployee.Contact.Name)
                </div>
                <div class="form-group">
                    @Html.LabelFor(Model => Model.CreatedEmployee.Contact.EmailAddress)
                    @Html.TextBoxFor(Model => Model.CreatedEmployee.Contact.EmailAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.CreatedEmployee.Contact.EmailAddress)
                </div>
                <div class="form-group">
                    @Html.LabelFor(Model => Model.CreatedEmployee.Contact.PhoneNumber)
                    @Html.TextBoxFor(Model => Model.CreatedEmployee.Contact.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.CreatedEmployee.Contact.PhoneNumber)
                </div>
                <input id="Submit" type="submit" value="Create Employee" asp-controller="Home" asp-action="CreateEmployee" class="btn btn-primary">
            }
        </div>

        <div class="col-6">
            <h2 class="h2 text-center">Create Employer</h2>
            @using (Html.BeginForm(FormMethod.Post))
            {
                <div class="form-group">
                    @Html.LabelFor(Model => Model.CreatedEmployer.Contact.Name)
                    @Html.TextBoxFor(Model => Model.CreatedEmployer.Contact.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.CreatedEmployer.Contact.Name)
                </div>
                <div class="form-group">
                    @Html.LabelFor(Model => Model.CreatedEmployer.Contact.EmailAddress)
                    @Html.TextBoxFor(Model => Model.CreatedEmployer.Contact.EmailAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.CreatedEmployer.Contact.EmailAddress)
                </div>
                <div class="form-group">
                    @Html.LabelFor(Model => Model.CreatedEmployer.Contact.PhoneNumber)
                    @Html.TextBoxFor(Model => Model.CreatedEmployer.Contact.PhoneNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.CreatedEmployer.Contact.PhoneNumber)
                </div>
                <input id="Submit" type="submit" value="Create Employer" asp-controller="Home" asp-action="CreateEmployer" class="btn btn-primary">
            }
        </div>
    </div>

    <div class="row text-center">
        <div class="col">
                <h3 class="h3">Select Employee/Employer</h3>
                @using (Html.BeginForm("UseUser", "Home", FormMethod.Post))
                {
                    <div class="form-group">
                        <select id="userSelect" onchange="this.form.submit()" asp-for="@Model.SelectedUserName">
                            <option value="" selected>No User Selected</option>
                            @foreach (WorkingPerson workingPerson in UserHandlerService.WorkingPeople)
                            {
                                if (UserHandlerService.ActiveUser?.Contact.Name == workingPerson.Contact.Name)
                                {
                                    <option value="@workingPerson.Contact.Name" selected>@workingPerson.Contact.Name</option>
                                }
                                if (UserHandlerService.ActiveUser?.Contact.Name != workingPerson.Contact.Name)
                                {
                                    <option value="@workingPerson.Contact.Name">@workingPerson.Contact.Name</option>
                                }
                            }
                        </select>
                    </div>
                }
                <p>
                    Selected User: @selectedUserNam
                </p>
                <a class="btn btn-primary" asp-action="ExitUser" asp-controller="Home" m>Exit User</a>
        </div>
    </div>
</div>
